<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="button1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUkAAACZCAMAAACVHTgBAAAABGdBTUEAALGPC/xhBQAAANhQTFRF/v7+
        ////gYGB+t25vbzBRkJg+dy7vby/aGhodHR0XV1dpKSkhISEVlZWWFhXu73B9PT02NjYTU1NnZ2dysrK
        Nzc3JSUlgYGFk5OTRUVFwsLE9fX1MDAwfHx8Pz8/dXV4bGtv4+PjTElNtLS2y7mf4uLitbW50tLSUVFW
        UU9ekpGTWltfUE5exsbG3sarXVpYR0NYVVRcppmJdnBr6tCwuqqW5MuvwLCaUFBMq6uvSERfICAhPT9F
        g3t2kIZ8mo+B9t6y69nDvLSsbmllsKSSR0hSyLeZWldQ/yhalgAAFYlJREFUeF7tnQ1jorq2ho12FCLh
        aPAeFQ+jgq0p7Oqo/Rhm13bObefu//+P7lpJQKzYsTNtYWZ89p6KUSB5XVlZ+QAqRUDaplUkhqkxvCnR
        efo1IT1u01LAvF9dSeZVSwE1K7+0lKCkpYtSLNZRyVfCso9Kvg6/gZJUKanb0kKQ5//1a7dS0mAcYe8P
        nBXbPIiHfgslPV5tFoXHzd9JyY+npChav5mS7aKKQQZKyd/ETx6V/GnKo+Sxdv8sRyVfi6OSr8VvrKQO
        Tp6iP311fl8lyZiq/k4Wxt7MZn9jJQPu6d7HBov3/kwlD6+MOUo2+VjV5wwDO/z9lcSC6k0NdMDi1oG5
        ylGyAUrq7QRSMZpvVcyyKAnm0moNlJYEswK6jh1+cGXMUdLNUbJl/+5KkoFDOTeaLbTMdgN0rLQtaCFs
        +0CjPCqpIK0R6Aj/aHtw2qO8MWg70PD22h4PfjUlC+13E1LlPazagRwxtZlpMc5iaDBOOT0sX0clJVBo
        D10kgVaCmdOxZzMKbQ2mWPywoh+VlJAhVwKQShN95JRz6TDRZ3LjoHy9VEl9+J9FHktRCj9JONUNi8wd
        xCqgLBn3PHhv8YtDMvYyJWWk8ApkNSuDTRJibDfRIELYtsBlXqB9GoMDcvZCJe1//+c1+DsT55dASQh4
        jG3DI8TD2TqPjcBEjYOa7xcqGfdeh/RscMyilQSri03Othd4kZjZXmsgK3nAjQOy9kI/iV7kVZCHlRTt
        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
</value>
  </data>
</root>